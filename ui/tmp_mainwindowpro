# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindowPro.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMainWindow, QMessageBox
from funcs.pathConv import PathConv


class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(706, 471)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.visualWindow = QtWidgets.QLabel(self.centralwidget)
        self.visualWindow.setGeometry(QtCore.QRect(20, 10, 451, 401))
        self.visualWindow.setText("")
        self.visualWindow.setObjectName("visualWindow")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(500, 40, 161, 321))
        self.groupBox.setObjectName("groupBox")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 30, 161, 291))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.method_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.method_label.setObjectName("method_label")
        self.verticalLayout.addWidget(self.method_label)
        self.method_comboBox = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.method_comboBox.setObjectName("method_comboBox")
        self.verticalLayout.addWidget(self.method_comboBox)
        self.kernel_label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.kernel_label.setObjectName("kernel_label")
        self.verticalLayout.addWidget(self.kernel_label)
        self.kernel_comboBox = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.kernel_comboBox.setObjectName("kernel_comboBox")
        self.verticalLayout.addWidget(self.kernel_comboBox)
        self.spacing = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.spacing.setText("")
        self.spacing.setObjectName("spacing")
        self.verticalLayout.addWidget(self.spacing)
        self.run_Button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.run_Button.setObjectName("run_Button")
        self.verticalLayout.addWidget(self.run_Button)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 706, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuProcessing = QtWidgets.QMenu(self.menubar)
        self.menuProcessing.setObjectName("menuProcessing")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_path = QtWidgets.QAction(MainWindow)
        self.actionOpen_path.setObjectName("actionOpen_path")
        self.actionOpen_raster = QtWidgets.QAction(MainWindow)
        self.actionOpen_raster.setObjectName("actionOpen_raster")
        self.actionClear = QtWidgets.QAction(MainWindow)
        self.actionClear.setObjectName("actionClear")
        self.actionExport_Image = QtWidgets.QAction(MainWindow)
        self.actionExport_Image.setObjectName("actionExport_Image")
        self.actionExport_TIFF = QtWidgets.QAction(MainWindow)
        self.actionExport_TIFF.setObjectName("actionExport_TIFF")
        self.menuFile.addAction(self.actionOpen_raster)
        self.menuFile.addAction(self.actionOpen_path)
        self.menuFile.addAction(self.actionClear)
        self.menuProcessing.addAction(self.actionExport_Image)
        self.menuProcessing.addAction(self.actionExport_TIFF)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuProcessing.menuAction())

        self.retranslateUi(MainWindow)
        self.__initUI__()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Settings"))
        self.method_label.setText(_translate("MainWindow", "Method:"))
        self.kernel_label.setText(_translate("MainWindow", "Kernel Size:"))
        self.run_Button.setText(_translate("MainWindow", "RUN"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuProcessing.setTitle(_translate("MainWindow", "Processing"))
        self.actionOpen_path.setText(_translate("MainWindow", "Open path"))
        self.actionOpen_raster.setText(_translate("MainWindow", "Open raster"))
        self.actionClear.setText(_translate("MainWindow", "Clear"))
        self.actionExport_Image.setText(_translate("MainWindow", "Export Image"))
        self.actionExport_TIFF.setText(_translate("MainWindow", "Export TIFF"))

    def __initUI__(self):
        self.method_comboBox.addItems(["mean", "max", "min"])
        self.kernel_comboBox.addItems(["3", "5", "7"])
        self.visualWindow.setStyleSheet("QLabel{background-color:rgb(205, 205, 205);}")
        self.actionOpen_path.triggered.connect(self.__openPath__)
        self.actionOpen_raster.triggered.connect(self.__openRaster__)
        self.actionClear.triggered.connect(self.__clear__)
        self.actionOpen_path.setEnabled(False)
        self.actionClear.setEnabled(False)
        self.run_Button.setEnabled(False)
        self.actionExport_TIFF.setEnabled(False)
        self.actionExport_Image.setEnabled(False)
        self.solver = PathConv()

    '''
    @func: file and system operations
    '''

    def __openPath__(self):
        fileName, fileType = QFileDialog.getOpenFileName(self, "Choose file", "./", "Shapefile (*.shp)")
        if not fileName:
            QMessageBox.warning(self, "Warning", "No valid file selected.", QMessageBox.Yes | QMessageBox.No,
                                QMessageBox.Yes)
            return
        self.solver.load_path(fileName)
        self.actionOpen_raster.setEnabled(False)
        self.actionOpen_path.setEnabled(False)
        self.actionClear.setEnabled(True)
        self.run_Button.setEnabled(True)
        pixelMap = self.solver.visualize_afterPath((self.visualWindow.width().real, self.visualWindow.height().real))
        self.visualWindow.setPixmap(pixelMap)

    def __openRaster__(self):
        fileName, fileType = QFileDialog.getOpenFileName(self, "Choose file", "./", "TIFF (*.tif *.jpg *.png)")
        if not fileName:
            QMessageBox.warning(self, "Warning", "No valid file selected.", QMessageBox.Yes | QMessageBox.No,
                                QMessageBox.Yes)
            return
        self.solver.load_raster(fileName)
        self.actionOpen_path.setEnabled(True)
        self.actionOpen_raster.setEnabled(False)
        pixelMap = self.solver.visualize_raster((self.visualWindow.width().real, self.visualWindow.height().real))
        self.visualWindow.setPixmap(pixelMap)

    def __clear__(self):
        self.solver = PathConv()
        self.visualWindow.clear()
        self.actionOpen_raster.setEnabled(True)
        self.actionExport_TIFF.setEnabled(False)
        self.actionExport_Image.setEnabled(False)
        self.run_Button.setEnabled(False)
        self.actionClear.setEnabled(False)

    def __run__(self):
        self.actionExport_TIFF.setEnabled(True)
        self.actionExport_Image.setText(True)
